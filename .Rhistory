install.packages("slidify")
available packages <>
<- available.packages()
available.packages()
install.packages("ABC Analysis")
library("tools", lib.loc="C:/Program Files/R/R-3.2.2/library")
library("spatial", lib.loc="C:/Program Files/R/R-3.2.2/library")
install.packages("spatial")
ABCanalysis
install.packages(ABCanalysis)
install.packages("ABCanalysis")
library(ABCanalysis) Search()
library(ABCanalysis)
search()
library(ggplot2)
search()
install.packages("devtools")
library(devtools)
search()
find_rtools()
install.packages("Kernsmooth")
YES
Y
install.packages("KernSmooth")
library(KernSmooth)
clearPushBack()
getwd
getwd()
getwd()
make dir(coursera)
help()
getwd()
setwd "C"/Users/Alok/Documents/R""
setwd "C"/Users/Alok/Documents/R"
setwd
getwd()
cd c:/users/alok/documents/R
dir
getwd()
setwd help()
help setwd()
setwd(c:/users/alok/documents/r)
setwd(r)
dir()
x<-0:6
x
as.numeric(x)
as.character(x)
as.logical(x)
y<-("a",2)
class(y)
class(x)
y<- c(1.7,”A”) 
a<-c(1.7,"A")
class(a)
a<-c(T,1,8)
class(a)
a<-c(T,1.8)
class(a)
a<-c(T,a)
class(a)
a<-c(T,x,y)
a<-c(T,l,m)
a<-c(T,l)
a<-c(T,"l")
class(a)
as.complex(a)
x<-c("A","b")
x
as.numeric(x)
x<-c("A","b","C")
x
as.numeric(x)
as.complex(x)
as.character(x)
x<-(1:6)
as.character(x)
as.complex(x)
x<-list(1,"A",1+7i)
class(x)
x
q()
load("C:\\Users\\Alok\\Documents\\CourseraR\\.RData")
m<-matrix(nrow=2,ncol=4)
m
dim(m)
attributes(m)
m<-matrix(1:6 nrow=2,ncol=4)
m<-matrix(1:6,nrow=2,ncol=4)
m<-matrix(1:8,nrow=2,ncol=4)
m
m<-matrix(1:16,nrow=2,ncol=4)
m
m<-matrix(8:16,nrow=2,ncol=4)
m<-matrix(9:16,nrow=2,ncol=4)
m
m<-1:18
n<- 1:18
t<-1:9
t
dim(2,7)
dim(t)<-(3,9)
dim(m)<-(2,7)
q()
m<-matrix(1:6,nrow=4,ncol=6)
m
m<-1:12
m
dim(m)
dim(m)<-c(2,5)
dim(m)<-c(2,6)
m
x<-4:8
y<-10:16
a<-rbind(x,y)
y<-8:16
a<-rbind(x,y)
rbind(x,y)
x
y
rbind(x,y)
dim(x,y)
cbind(x,y)
rbind(x,y)
x<-factor(c("yes","no","yes","no","no") 
x
x<-factor(c("yes","no","yes","no","no"))
x
table(x)
unclass(x)
cube<-function(x,n)x^3
cube(3)
x<-1:10
if x>5 
if x>5 {x<-0}
f <- function(x) {
        g <- function(y) {
                y + z
        }
        z <- 4
        x + g(x)
}
z<-10
f(3)
x <- 5
y <- if(x < 3) {
        NA
} else {
        10
}
y
h <- function(x, y = NULL, d = 3L) {
        z <- cbind(x, d)
        if(!is.null(y))
                z <- z + y
        else
                z <- z + f
        g <- x + y / z
        if(d == 3L)
                return(g)
        g <- g + 10
        g
}
f
g
g
f
q()
getwd()
dir()
source("cachematrix.R")
any_matrix<- makeCacheMatrix(2:10,3,3)
any_matrix<- makeCacheMatrix(matrix(2:10,3,3))
any_matrix
any_matrix()
any_matrix<- makeCacheMatrix(matrix(2:10,3,3))
any_matrix$get()
any_matrix$getinverse()
cachesolve(any_matrix)
any_matrix<- makeCacheMatrix(matrix(2:5,2,2))
any_matrix$getinverse()
any_matrix<- makeCacheMatrix(matrix(2:5,2,2))
any_matrix$get()
any_matrix$getinverse()
cachesolve(any_matrix)
dir()
source("cachematrix.R")
source("cachematrix.R")
source("cachematrix.R")
source("cachematrix.R")
source("cachematrix.R")
source("cachematrix.R")
source("cachematrix.R")
any_matrix<- makeCacheMatrix(matrix(2:5,2,2))
any_matrix$get()
any_matrix$getinverse()
any_matrix$setinverse()
source("cachematrix.R")
any_matrix<- makeCacheMatrix(matrix(2:5,2,2))
any_matrix$getinverse()
cachesolve(any_matrix)
source("cachematrix.R")
dir()
source("cachematrix.R")
any_matrix<- makeCacheMatrix(matrix(2:5,2,2))
any_matrix$get()
any_matrix$getinverse()
cachesolve(any_matrix)
any_matrix$getinverse()
any_matrix<- makeCacheMatrix(matrix(c(1,3,5,9),2,2))
any_matrix$get()
any_matrix$getinverse()
cachesolve(any_matrix)
cachesolve(any_matrix)
any_matrix$getinverse()
getwd()
getwd()
source("cachematrix.R")
any_matrix<- makeCacheMatrix(matrix(c(1,3,5,9),2,2))
any_matrix$get()
any_matrix$getinverse()
cachesolve(any_matrix)
cachesolve(any_matrix)
any_matrix$getinverse()
source("cachematrix.R")
any_matrix<- makeCacheMatrix(matrix(2:5,2,2))
any_matrix$get()
any_matrix$getinverse()
cachesolve(any_matrix)
cachesolve(any_matrix)
any_matrix$getinverse()
q()
